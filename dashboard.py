# -*- coding: utf-8 -*-
"""dashboard.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_TK3XTPXZ6Bb_lqHDVMjycfWB62j8pBe
"""

import streamlit as st
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Load dataset
df = pd.read_csv("spotify_churn_dataset.csv")

st.set_page_config(page_title="Spotify Churn Dashboard", layout="wide")
st.title("ðŸŽµ Spotify Churn Analysis Dashboard")

# --- Sidebar Filters ---
st.sidebar.header("Filter Options")

# Age filter
min_age, max_age = int(df["age"].min()), int(df["age"].max())
age_range = st.sidebar.slider("Select Age Range", min_value=min_age, max_value=max_age, value=(25, 40))

# Subscription filter
subscription_options = df["subscription_type"].unique().tolist()
selected_subscriptions = st.sidebar.multiselect("Subscription Type", subscription_options, default=subscription_options)

# Country filter
if "country" in df.columns:
    country_options = df["country"].unique().tolist()
    selected_countries = st.sidebar.multiselect("Country", country_options, default=country_options)
else:
    selected_countries = None

# Filter dataframe
filtered_df = df[(df["age"] >= age_range[0]) & (df["age"] <= age_range[1])]
filtered_df = filtered_df[filtered_df["subscription_type"].isin(selected_subscriptions)]
if selected_countries:
    filtered_df = filtered_df[filtered_df["country"].isin(selected_countries)]

st.subheader(f"Filtered Dataset ({len(filtered_df)} users)")
st.dataframe(filtered_df.head(10))

# --- Churn Rate by Subscription Type ---
st.subheader("Churn Rate by Subscription Type")
churn_rate_sub = filtered_df.groupby("subscription_type")["churn"].mean().reset_index()
fig1, ax1 = plt.subplots()
sns.barplot(x="subscription_type", y="churn", data=churn_rate_sub, palette="pastel", ax=ax1)
ax1.set_ylabel("Churn Rate")
st.pyplot(fig1)

# --- Device Usage vs Churn ---
st.subheader("Device Usage vs Churn")
device_churn = filtered_df.groupby("device")["churn"].mean().reset_index()
fig2, ax2 = plt.subplots()
sns.barplot(x="device", y="churn", data=device_churn, palette="muted", ax=ax2)
ax2.set_ylabel("Churn Rate")
st.pyplot(fig2)

# --- Correlation Heatmap for Numeric Features ---
st.subheader("Correlation Heatmap")
numeric_cols = filtered_df.select_dtypes(include="number").columns.tolist()
if len(numeric_cols) > 1:
    corr = filtered_df[numeric_cols].corr()
    fig3, ax3 = plt.subplots(figsize=(10, 6))
    sns.heatmap(corr, annot=True, cmap="coolwarm", ax=ax3)
    st.pyplot(fig3)
else:
    st.write("Not enough numeric columns to show correlation heatmap.")

# --- Scatter Plot: Weekly Streams vs Churn ---
if "weekly_streams" in filtered_df.columns:
    st.subheader("Weekly Streams vs Churn")
    fig4, ax4 = plt.subplots()
    sns.scatterplot(x="weekly_streams", y="churn", hue="subscription_type", data=filtered_df, ax=ax4, palette="bright")
    ax4.set_ylabel("Churn")
    ax4.set_xlabel("Weekly Streams")
    st.pyplot(fig4)

st.markdown("---")
st.markdown("Dashboard created by **[Your Name]** | Data Source: Spotify Churn Dataset")